# GitHub Actions workflow: CI for rust-releases
#
# based on: https://github.com/BurntSushi/bstr/blob/master/.github/workflows/ci.yml
# which is licensed under Apache License, Version 2.0 or MIT license

name: "GitHub Actions: CI"
on:
  pull_request:
  push:
    branches:
      - master
      - main
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [msrv, stable, nightly, macos, win-gnu, win-msvc]
        include:
          # pinned (MSRV) rust version :: ubuntu
          - build: msrv
            os: ubuntu-latest
            rust: 1.46.0

          # latest rust stable :: ubuntu
          - build: stable
            os: ubuntu-latest
            rust: stable

          # latest rust nightly :: ubuntu
          - build: nightly
            os: ubuntu-latest
            rust: nightly

          # latest rust stable :: mac_os
          - build: macos
            os: macOS-latest
            rust: stable

          # latest rust stable :: windows + gnu
          - build: win-gnu
            os: windows-latest
            rust: stable-x86_64-gnu

          # latest rust stable :: windows + msvc
          - build: win-msvc
            os: windows-latest
            rust: stable


    steps:
      # checkout
      - name: Checkout repository
        uses: actions/checkout@v2

      # install: rust
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      # build / doc / test
      - name: Build all workspace crates
        run: cargo build --verbose --all

      - name: Test all workspace crates
        run: cargo test --verbose --all

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy
      - name: Lint with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args:  --all --tests -- -Dclippy::all

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Check formatting
        run: |
          cargo fmt --all -- --check
